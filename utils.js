/**\n * Additional utilities and helper functions for the website\n */\n\nconst Utils = {\n    // Generate PDF functionality\n    generatePDF: function() {\n        showNotification('Para descargar como PDF, use Ctrl+P e imprima a PDF', 'info');\n        setTimeout(() => {\n            if (confirm('¿Desea abrir el diálogo de impresión?')) {\n                window.print();\n            }\n        }, 2000);\n    },\n\n    // Copy section link\n    copyLink: function(sectionId) {\n        const url = window.location.href.split('#')[0] + '#' + sectionId;\n        \n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(url).then(() => {\n                showNotification('Enlace copiado al portapapeles', 'success');\n            }).catch(() => {\n                this.fallbackCopyText(url);\n            });\n        } else {\n            this.fallbackCopyText(url);\n        }\n    },\n\n    fallbackCopyText: function(text) {\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        textArea.style.cssText = 'position:fixed;top:0;left:0;opacity:0;';\n        \n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        \n        try {\n            document.execCommand('copy');\n            showNotification('Enlace copiado al portapapeles', 'success');\n        } catch (err) {\n            showNotification('No se pudo copiar el enlace', 'error');\n        }\n        \n        document.body.removeChild(textArea);\n    },\n\n    // Reading progress tracker\n    initReadingProgress: function() {\n        const progressBar = document.createElement('div');\n        progressBar.id = 'reading-progress';\n        progressBar.style.cssText = `\n            position: fixed;\n            top: 70px;\n            left: 0;\n            width: 0%;\n            height: 3px;\n            background: linear-gradient(90deg, var(--primary-color), var(--accent-color));\n            z-index: 1001;\n            transition: width 0.3s ease;\n        `;\n        document.body.appendChild(progressBar);\n\n        window.addEventListener('scroll', () => {\n            const windowHeight = window.innerHeight;\n            const documentHeight = document.documentElement.scrollHeight - windowHeight;\n            const scrollTop = window.pageYOffset;\n            const progress = (scrollTop / documentHeight) * 100;\n            \n            progressBar.style.width = Math.min(100, Math.max(0, progress)) + '%';\n        });\n    },\n\n    // Calculate and display reading time\n    calculateReadingTime: function() {\n        const content = document.querySelector('.main-content');\n        if (!content) return;\n\n        const text = content.textContent || content.innerText || '';\n        const wordsPerMinute = 200;\n        const words = text.trim().split(/\\s+/).length;\n        const readingTime = Math.ceil(words / wordsPerMinute);\n\n        const heroStats = document.querySelector('.hero-stats');\n        if (heroStats) {\n            const readingTimeStat = document.createElement('div');\n            readingTimeStat.className = 'stat-item';\n            readingTimeStat.innerHTML = `\n                <div class=\"stat-number\">${readingTime}</div>\n                <div class=\"stat-label\">Min lectura</div>\n            `;\n            heroStats.appendChild(readingTimeStat);\n        }\n    },\n\n    // Share functionality\n    initShareButtons: function() {\n        const shareData = {\n            title: document.title,\n            text: 'Guía completa sobre refugio para cubanos en Argentina',\n            url: window.location.href\n        };\n\n        const heroActions = document.querySelector('.hero-actions');\n        if (heroActions && navigator.share) {\n            const shareBtn = document.createElement('button');\n            shareBtn.className = 'btn btn-secondary';\n            shareBtn.innerHTML = '<i class=\"fas fa-share-alt\"></i> Compartir';\n            shareBtn.onclick = () => navigator.share(shareData);\n            heroActions.appendChild(shareBtn);\n        }\n    },\n\n    // Service Worker registration for PWA\n    registerServiceWorker: function() {\n        if ('serviceWorker' in navigator) {\n            window.addEventListener('load', () => {\n                navigator.serviceWorker.register('./sw.js')\n                    .then(registration => {\n                        console.log('SW registered: ', registration);\n                        this.initInstallPrompt();\n                    })\n                    .catch(registrationError => {\n                        console.log('SW registration failed: ', registrationError);\n                    });\n            });\n        }\n    },\n\n    // PWA install prompt\n    initInstallPrompt: function() {\n        let deferredPrompt;\n        \n        window.addEventListener('beforeinstallprompt', (e) => {\n            e.preventDefault();\n            deferredPrompt = e;\n            \n            const heroActions = document.querySelector('.hero-actions');\n            if (heroActions && !document.querySelector('.install-btn')) {\n                const installBtn = document.createElement('button');\n                installBtn.className = 'btn btn-secondary install-btn';\n                installBtn.innerHTML = '<i class=\"fas fa-mobile-alt\"></i> Instalar App';\n                installBtn.onclick = () => {\n                    if (deferredPrompt) {\n                        deferredPrompt.prompt();\n                        deferredPrompt.userChoice.then((choiceResult) => {\n                            if (choiceResult.outcome === 'accepted') {\n                                showNotification('¡Aplicación instalada correctamente!', 'success');\n                            }\n                            deferredPrompt = null;\n                            installBtn.style.display = 'none';\n                        });\n                    }\n                };\n                heroActions.appendChild(installBtn);\n            }\n        });\n        \n        window.addEventListener('appinstalled', () => {\n            const installBtn = document.querySelector('.install-btn');\n            if (installBtn) {\n                installBtn.style.display = 'none';\n            }\n            showNotification('¡Aplicación instalada! Ahora puede acceder offline.', 'success');\n        });\n    },\n\n    // Print optimization\n    initPrintStyles: function() {\n        const printStyles = document.createElement('style');\n        printStyles.textContent = `\n            @media print {\n                .navbar, .toc-sidebar, .hero-section, .footer,\n                .tool-btn, #reading-progress {\n                    display: none !important;\n                }\n                \n                .main-content {\n                    margin-left: 0 !important;\n                }\n                \n                .content-section {\n                    page-break-inside: avoid;\n                    margin-bottom: 20px;\n                }\n                \n                .citation {\n                    color: #000 !important;\n                    text-decoration: none !important;\n                }\n                \n                body {\n                    font-size: 12pt;\n                    line-height: 1.4;\n                }\n                \n                h1, h2, h3 {\n                    page-break-after: avoid;\n                }\n            }\n        `;\n        document.head.appendChild(printStyles);\n    },\n\n    // Initialize all utilities\n    init: function() {\n        this.calculateReadingTime();\n        this.initReadingProgress();\n        this.initShareButtons();\n        this.initPrintStyles();\n        this.registerServiceWorker();\n    }\n};\n\n// Auto-initialize when DOM is ready\nif (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n        setTimeout(() => Utils.init(), 1000);\n    });\n} else {\n    setTimeout(() => Utils.init(), 1000);\n}\n\n// Expose utilities globally\nwindow.Utils = Utils;\n\n// Add event listener for PDF download\ndocument.addEventListener('DOMContentLoaded', function() {\n    const downloadBtn = document.getElementById('download-pdf');\n    if (downloadBtn) {\n        downloadBtn.addEventListener('click', Utils.generatePDF);\n    }\n});